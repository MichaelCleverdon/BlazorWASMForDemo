@page "/foodTable"
@using BlazorWASMForDemo.Objects
@using BlazorWASMForDemo.Services
@attribute [Authorize]
@inject IFoodApi _api
@inject AuthenticationStateProvider claimsProvider

<h3>FoodTable</h3>

@if(foodObjects == null){
    <p>Loading data...</p>
} else {
    <table class="table">
        <thead>
            <tr>
                <th>Username</th>
                <th>Name</th>
                <th style="text-align: right;">Quantity</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var food in foodObjects!)
            {
                <tr>
                    <td>@food.Username</td>
                    <td>@food.Name</td>
                    <td style="text-align: right;">@food.Quantity</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<FoodObject>? foodObjects;
    protected override async Task OnInitializedAsync()
    {
        var authState = await claimsProvider.GetAuthenticationStateAsync();
        var user = authState?.User;

        //The user's have to be authenticated for the call to work properly. Which is why the @attribute [Authorize] is in place
        foodObjects = await _api.GetAllFoodObjects(user?.Identity!.Name!);
    }
}
